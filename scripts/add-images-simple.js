// Script simples para adicionar imagens aos produtos
const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

// Mapeamento direto de nomes para URLs de imagens placeholder
const productImageMap = {
  // Lubrificantes
  '√≥leo motor': 'https://via.placeholder.com/400x300/4A90E2/FFFFFF?text=√ìleo+Motor',
  '√≥leo 5w30': 'https://via.placeholder.com/400x300/4A90E2/FFFFFF?text=√ìleo+5W30',
  '√≥leo 10w40': 'https://via.placeholder.com/400x300/4A90E2/FFFFFF?text=√ìleo+10W40',
  '√≥leo 15w40': 'https://via.placeholder.com/400x300/4A90E2/FFFFFF?text=√ìleo+15W40',
  '√≥leo hidr√°ulico': 'https://via.placeholder.com/400x300/4A90E2/FFFFFF?text=√ìleo+Hidr√°ulico',
  '√≥leo transmiss√£o': 'https://via.placeholder.com/400x300/4A90E2/FFFFFF?text=√ìleo+Transmiss√£o',
  '√≥leo diferencial': 'https://via.placeholder.com/400x300/4A90E2/FFFFFF?text=√ìleo+Diferencial',
  
  // Aditivos
  'aditivo motor': 'https://via.placeholder.com/400x300/7ED321/FFFFFF?text=Aditivo+Motor',
  'aditivo combust√≠vel': 'https://via.placeholder.com/400x300/7ED321/FFFFFF?text=Aditivo+Combust√≠vel',
  'aditivo radiador': 'https://via.placeholder.com/400x300/7ED321/FFFFFF?text=Aditivo+Radiador',
  'aditivo freio': 'https://via.placeholder.com/400x300/7ED321/FFFFFF?text=Aditivo+Freio',
  'aditivo dire√ß√£o': 'https://via.placeholder.com/400x300/7ED321/FFFFFF?text=Aditivo+Dire√ß√£o',
  
  // Lavagem
  'shampoo carro': 'https://via.placeholder.com/400x300/50E3C2/FFFFFF?text=Shampoo+Carro',
  'cera carro': 'https://via.placeholder.com/400x300/50E3C2/FFFFFF?text=Cera+Carro',
  'limpa vidros': 'https://via.placeholder.com/400x300/50E3C2/FFFFFF?text=Limpa+Vidros',
  'limpa pneus': 'https://via.placeholder.com/400x300/50E3C2/FFFFFF?text=Limpa+Pneus',
  'limpa estofos': 'https://via.placeholder.com/400x300/50E3C2/FFFFFF?text=Limpa+Estofos',
  
  // Acess√≥rios
  'filtro ar': 'https://via.placeholder.com/400x300/F5A623/FFFFFF?text=Filtro+de+Ar',
  'filtro √≥leo': 'https://via.placeholder.com/400x300/F5A623/FFFFFF?text=Filtro+de+√ìleo',
  'filtro combust√≠vel': 'https://via.placeholder.com/400x300/F5A623/FFFFFF?text=Filtro+Combust√≠vel',
  'velas': 'https://via.placeholder.com/400x300/F5A623/FFFFFF?text=Velas',
  'cabos': 'https://via.placeholder.com/400x300/F5A623/FFFFFF?text=Cabos',
  'bateria': 'https://via.placeholder.com/400x300/F5A623/FFFFFF?text=Bateria',
  'pneus': 'https://via.placeholder.com/400x300/F5A623/FFFFFF?text=Pneus',
  'jantes': 'https://via.placeholder.com/400x300/F5A623/FFFFFF?text=Jantes'
};

async function addImagesToProducts() {
  try {
    console.log('üîç Procurando produtos na base de dados...');
    
    const products = await prisma.product.findMany({
      where: { ativo: true },
      select: { id: true, nome: true, categoria: true, imagemUrl: true }
    });
    
    console.log(`üì¶ Encontrados ${products.length} produtos`);
    console.log('='.repeat(60));
    
    let updated = 0;
    let skipped = 0;
    let notFound = 0;
    
    for (const product of products) {
      const nomeLower = product.nome.toLowerCase().trim();
      let imageUrl = null;
      
      // Procurar correspond√™ncia exata
      if (productImageMap[nomeLower]) {
        imageUrl = productImageMap[nomeLower];
      } else {
        // Procurar correspond√™ncia parcial
        for (const [key, url] of Object.entries(productImageMap)) {
          if (nomeLower.includes(key) || key.includes(nomeLower)) {
            imageUrl = url;
            break;
          }
        }
      }
      
      if (imageUrl && !product.imagemUrl) {
        await prisma.product.update({
          where: { id: product.id },
          data: { imagemUrl: imageUrl }
        });
        
        console.log(`‚úÖ ${product.nome} ‚Üí Imagem adicionada`);
        updated++;
      } else if (product.imagemUrl) {
        console.log(`‚è≠Ô∏è  ${product.nome} ‚Üí J√° tem imagem`);
        skipped++;
      } else {
        console.log(`‚ùå ${product.nome} ‚Üí Sem correspond√™ncia`);
        notFound++;
      }
    }
    
    console.log('='.repeat(60));
    console.log(`üéâ Processo conclu√≠do!`);
    console.log(`‚úÖ Atualizados: ${updated}`);
    console.log(`‚è≠Ô∏è  J√° tinham imagem: ${skipped}`);
    console.log(`‚ùå Sem correspond√™ncia: ${notFound}`);
    
  } catch (error) {
    console.error('‚ùå Erro:', error);
  } finally {
    await prisma.$disconnect();
  }
}

addImagesToProducts();
